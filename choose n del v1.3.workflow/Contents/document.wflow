<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>523</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/bin/bash
#Created by Nima Behkar / v1.3

OPEN_HTML=1 # Default value to open HTML file
FOLDER_PATH="$1"
HTML_FILE="$FOLDER_PATH/___.html"
DEL_FILE=$(ls -t "$FOLDER_PATH"/___del*.txt | head -n 1)

# Filtering image and video files
FILE_LIST=$(find "$FOLDER_PATH" -maxdepth 1 -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.bmp" -o -iname "*.gif" -o -iname "*.tiff" -o -iname "*.heif" -o -iname "*.mp4" -o -iname "*.webm" -o -iname "*.ogg" \))

# Counting total files and listed image and video files and other files
TOTAL_FILE_COUNT=$(ls "$FOLDER_PATH" | wc -l)
IMAGE_FILE_COUNT=$(echo "$FILE_LIST" | grep -E "\.jpg|\.jpeg|\.png|\.bmp|\.gif|\.tiff|\.heif" | wc -l)
VIDEO_FILE_COUNT=$(echo "$FILE_LIST" | grep -E "\.mp4|\.webm|\.ogg" | wc -l)
NON_IMAGE_VIDEO_COUNT=$((TOTAL_FILE_COUNT - IMAGE_FILE_COUNT - VIDEO_FILE_COUNT))

# folder size
FOLDER_SIZE=$(du -sh "$FOLDER_PATH" | cut -f1)

# Checking for the existence of the HTML file
if [ -f "$HTML_FILE" ]; then
  # Asking to delete selected files
  RESPONSE=$(osascript -e 'tell app "System Events" to display dialog "Do you want to delete selected files?" buttons {"Yes", "No"} default button 2')
  if [[ $RESPONSE == *"Yes"* ]]; then
    # Checking for the existence of del.txt
    if [ -f "$DEL_FILE" ]; then
      # Preparing the list of files to be deleted
      DEL_LIST=""
      while IFS= read -r FILENAME || [[ -n "$FILENAME" ]]; do
        if [ -z "$FILENAME" ]; then
          continue
        fi
        FULL_PATH="$FOLDER_PATH/$FILENAME"
        if [ -f "$FULL_PATH" ]; then
          DEL_LIST+="$FULL_PATH\n"
        else
          echo "File not found: $FULL_PATH"
        fi
      done &lt; "$DEL_FILE"
      
      # Displaying the count of files to be deleted
      DEL_COUNT=$(( $(echo -e "$DEL_LIST" | wc -l) - 1 ))
      osascript -e "tell app \"System Events\" to display dialog \"Number of files to be deleted: $DEL_COUNT\""

      # Sending file list for deletion to the next Automator action
      echo -e "$DEL_LIST"
    else
      # Displaying a message if del.txt does not exist
      osascript -e 'tell app "System Events" to display dialog "___del.txt file does not exist. Copy this file to main folder then retry."'
      OPEN_HTML=0
    fi
  else
    OPEN_HTML=0
  fi
else
  # Creating a HTML file with a list of images
  echo "&lt;html&gt;&lt;head&gt;&lt;style&gt;" &gt; "$HTML_FILE"
  #styles:
  echo "body{background-color:#000;}.image{border:2px solid #fff;margin:2px;width:calc(33.33% - 5px)}.video-container{margin:2px;width:calc(33.33% - 9px);position:relative;display:inline-block}.video{border:2px solid #fff;width:100%;height:auto}.play-icon{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:2em;color:#fff;pointer-events:none;display:block}.video-container:hover .play-icon{display:none}#speakerIcon{cursor:pointer}.selected{border:2px solid red}#fixedContainer{position:fixed;top:0;width:100%;background-color:#fff;opacity:.3;transition:opacity 0.3s;z-index:100;display:flex;align-items:center;justify-content:left;padding:10px}#fixedContainer:hover{opacity:1}#fixedContainer *{margin-right:10px}#selectedImages{width:400px;height:30px;white-space:pre;overflow:auto;margin-bottom:5px;margin-top:15px}.imagesContainer{width:80%;margin:auto}#shortcutGuide{direction:rtl}.modal{display:none;position:fixed;z-index:1;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:rgba(0,0,0,.9)}.modal-content{margin:auto;display:block;width:auto;max-width:100%;padding-top:3%}#modalCaption{color:#fff;text-align:center;padding:10px}" &gt;&gt; "$HTML_FILE"
  echo "&lt;/style&gt;&lt;script&gt;" &gt;&gt; "$HTML_FILE"
  #js scripts:
  echo "var selectedImages=[],keysPressed={};function changeBackgroundColor(e){document.body.style.backgroundColor=e}function updateContainerWidth(){var e=document.getElementById(\"containerWidthRange\").value;document.getElementsByClassName(\"imagesContainer\")[0].style.width=e+\"%\"}function updateImages(){for(var e=document.getElementById(\"imageRange\").value,t=100/e-.5,n=document.querySelectorAll(\".image, .video-container\"),d=0;d&lt;n.length;d++)n[d].style.width=\"calc(\"+t+\"% - 4px)\";document.getElementById(\"rangeValue\").textContent=e}function updateSelectedImagesDisplay(){document.getElementById(\"selectedImages\").value=selectedImages.join(\"\n\")}function toggleSelection(e){var t=e.getAttribute(\"src\"),n=selectedImages.indexOf(t);n&gt;-1?(selectedImages.splice(n,1),e.classList.remove(\"selected\")):(selectedImages.push(t),e.classList.add(\"selected\")),updateSelectedImagesDisplay()}function selectAllImages(){var e=document.querySelectorAll(\".image, .video\");selectedImages=[];for(var t=0;t&lt;e.length;t++){var n=e[t].getAttribute(\"src\");selectedImages.push(n),e[t].classList.add(\"selected\")}updateSelectedImagesDisplay()}function reverseSelections(){var e=document.querySelectorAll(\".image, .video\");selectedImages=[];for(var t=0;t&lt;e.length;t++){var n=e[t].getAttribute(\"src\");e[t].classList.contains(\"selected\")?e[t].classList.remove(\"selected\"):(selectedImages.push(n),e[t].classList.add(\"selected\"))}updateSelectedImagesDisplay()}function downloadSelectedImages(){var e=document.getElementById(\"selectedImages\").value,t=new Blob([e],{type:\"text/plain\"}),n=document.createElement(\"a\");n.download=\"___del.txt\",n.href=window.URL.createObjectURL(t),n.style.display=\"none\",document.body.appendChild(n),n.click(),document.body.removeChild(n)}window.onload=function(){var e=document.createElement(\"div\");e.id=\"fixedContainer\";var t=document.createElement(\"input\");t.type=\"range\",t.id=\"imageRange\",t.min=\"1\",t.max=\"10\",t.value=\"4\",t.oninput=function(){updateImages(),this.blur()};var n=document.createElement(\"span\");n.id=\"rangeValue\";var d=document.createElement(\"input\");d.type=\"range\",d.id=\"containerWidthRange\",d.min=\"30\",d.max=\"100\",d.value=\"80\",d.oninput=updateContainerWidth;var s=document.createElement(\"div\");s.style.width=\"20px\",s.style.height=\"20px\",s.style.backgroundColor=\"black\",s.onclick=function(){changeBackgroundColor(\"black\")};var a=document.createElement(\"div\");a.style.width=\"20px\",a.style.height=\"20px\",a.style.backgroundColor=\"white\",a.style.border=\"1px solid black\",a.onclick=function(){changeBackgroundColor(\"white\")};var l=document.createElement(\"button\");l.textContent=\"Revert Selection\",l.onclick=reverseSelections;var o=document.createElement(\"button\");o.textContent=\"Select All\",o.onclick=selectAllImages;var c=document.createElement(\"button\");c.textContent=\"Download Selected Files\",c.style.backgroundColor=\"red\",c.onclick=downloadSelectedImages;var i=document.createElement(\"textarea\");i.id=\"selectedImages\",i.readOnly=!0,e.appendChild(t),e.appendChild(n),document.body.insertBefore(e,document.body.firstChild),document.body.insertBefore(i,e.nextSibling),e.appendChild(d),e.appendChild(s),e.appendChild(a),e.appendChild(l),e.appendChild(o),e.appendChild(c);for(var r=document.querySelectorAll(\".image, .video\"),m=0;m&lt;r.length;m++)r[m].addEventListener(\"click\",(function(e){e.shiftKey||toggleSelection(this)}));var u=document.createElement(\"div\");u.id=\"shortcutGuide\",u.textContent=\"Shortcuts: Press SHIFT+Click (Open Modal), R+V (Revert Selection), CMD+A (Select All), D+L (Download Selected)\",document.body.insertBefore(u,document.body.firstChild);var g=document.getElementById(\"fixedContainer\"),y=document.createElement(\"div\");y.id=\"speakerIcon\",y.textContent=\"ðŸ”Š\",g.appendChild(y);var p=!1;y.addEventListener(\"click\",(function(){p=!p,y.textContent=p?\"ðŸ”‡\":\"ðŸ”Š\";for(var e=document.getElementsByTagName(\"video\"),t=0;t&lt;e.length;t++)e[t].muted=p}));var v=document.getElementById(\"imageModal\"),h=document.getElementById(\"modalImage\"),f=document.getElementById(\"modalVideo\"),k=document.getElementById(\"modalCaption\"),C=document.getElementsByClassName(\"image\");for(m=0;m&lt;C.length;m++)C[m].addEventListener(\"click\",(function(e){e.shiftKey&amp;&amp;(v.style.display=\"block\",h.src=this.src,h.style.display=\"block\",f.style.display=\"none\",k.textContent=this.src.split(\"/\").pop())}));for(var E=document.getElementsByClassName(\"video\"),I=0;I&lt;E.length;I++)E[I].addEventListener(\"mouseenter\",(function(){this.play()})),E[I].addEventListener(\"mouseleave\",(function(){this.pause()})),E[I].addEventListener(\"click\",(function(e){e.shiftKey&amp;&amp;(v.style.display=\"block\",f.src=this.src,f.style.display=\"block\",h.style.display=\"none\",k.textContent=this.src.split(\"/\").pop())}));function b(e){parseInt(document.getElementById(\"imageRange\").value,10);var t=document.getElementsByClassName(\"image\")[0],n=t.offsetHeight+parseInt(window.getComputedStyle(t).marginBottom,10),d=window.pageYOffset||document.documentElement.scrollTop,s=\"down\"===e?d+n+15:d-n-15;window.scrollTo(0,s)}window.addEventListener(\"click\",(function(e){e.target!=v&amp;&amp;\"Escape\"!==e.key||(v.style.display=\"none\",f.paused||f.pause())})),window.addEventListener(\"keydown\",(function(e){\"Escape\"===e.key&amp;&amp;(v.style.display=\"none\",f.paused||f.pause())})),document.addEventListener(\"mousemove\",(function(e){e.shiftKey?(e.target.classList.contains(\"image\")||e.target.classList.contains(\"video\"))&amp;&amp;(e.target.style.cursor=\"pointer\"):(e.target.classList.contains(\"image\")||e.target.classList.contains(\"video\"))&amp;&amp;(e.target.style.cursor=\"default\")})),document.addEventListener(\"keydown\",(function(e){keysPressed[e.key]=!0,keysPressed.Control||keysPressed.Meta?keysPressed.a&amp;&amp;(selectAllImages(),e.preventDefault()):keysPressed.r&amp;&amp;keysPressed.v?(reverseSelections(),e.preventDefault()):keysPressed.d&amp;&amp;keysPressed.l?2===Object.keys(keysPressed).length&amp;&amp;keysPressed.d&amp;&amp;keysPressed.l&amp;&amp;(downloadSelectedImages(),e.preventDefault()):\"PageDown\"===e.key?(b(\"down\"),e.preventDefault()):\"PageUp\"===e.key&amp;&amp;(b(\"up\"),e.preventDefault())})),document.addEventListener(\"keyup\",(function(e){delete keysPressed[e.key]})),updateImages(),setTimeout((function(){for(var e=document.getElementsByClassName(\"image\"),t=0;t&lt;e.length;t++)e[t].complete&amp;&amp;0!==e[t].naturalWidth||(e[t].style.height=\"fit-content\",e[t].style.position=\"relative\",e[t].style.bottom=\"4px\")}),2e3)};" &gt;&gt; "$HTML_FILE"
  echo "&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"imagesContainer\"&gt;" &gt;&gt; "$HTML_FILE"

  # Sorting and addressing video files
  SORTED_VIDEO_LIST=$(find "$FOLDER_PATH" -maxdepth 1 -type f \( -iname "*.mp4" -o -iname "*.webm" -o -iname "*.ogg" \) | sort)
  if [ -n "$SORTED_VIDEO_LIST" ]; then
    echo "$SORTED_VIDEO_LIST" | while IFS= read -r VIDEO; do
      VIDEO_FILENAME=$(basename "$VIDEO")
      echo "&lt;div class=\"video-container\"&gt;&lt;video class=\"video\" src=\"$VIDEO_FILENAME\"&gt;&lt;/video&gt;&lt;div class=\"play-icon\"&gt;&amp;#9658;&lt;/div&gt;&lt;/div&gt;" &gt;&gt; "$HTML_FILE"
    done
  fi

  # Sorting and addressing image files
  SORTED_IMAGE_LIST=$(find "$FOLDER_PATH" -maxdepth 1 -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.bmp" -o -iname "*.gif" -o -iname "*.tiff" -o -iname "*.heif" \) | sort)
  if [ -n "$SORTED_IMAGE_LIST" ]; then
    echo "$SORTED_IMAGE_LIST" | while IFS= read -r IMAGE; do
      FILENAME=$(basename "$IMAGE")
      echo "&lt;img class=\"image\" src=\"$FILENAME\"&gt;" &gt;&gt; "$HTML_FILE"
    done
  fi

  echo "&lt;/div&gt;&lt;div id=\"imageModal\" class=\"modal\"&gt;&lt;img class=\"modal-content\" id=\"modalImage\"&gt;&lt;video class=\"modal-content\" id=\"modalVideo\" controls style=\"display: none;\"&gt;&lt;/video&gt;&lt;div id=\"modalCaption\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;" &gt;&gt; "$HTML_FILE"
  # Displaying a message after creating HTML file with images list
  osascript -e "tell app \"System Events\" to display dialog \"Total files: $TOTAL_FILE_COUNT\nListed image files: $IMAGE_FILE_COUNT\nListed video files: $VIDEO_FILE_COUNT\nOther files: $NON_IMAGE_VIDEO_COUNT\n------\nFolder size: $FOLDER_SIZE\n------\nHTML file created with images list.\""
fi

# Opening the HTML file AND Del all selected filename txt files
if [ "$OPEN_HTML" -eq 1 ]; then
  rm "$FOLDER_PATH"/___del*.txt
  open "$HTML_FILE"
fi
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>76CE153E-65C2-4CC3-A392-C55D86B4C571</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>FBD09938-BF68-4373-A4B6-94EF6583F053</string>
				<key>ShowWhenRun</key>
				<false/>
				<key>UUID</key>
				<string>3EEB0DEB-C1E4-47FA-8313-25BDCACE76D7</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>350.000000:305.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<false/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.path</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.1.2</string>
				<key>AMApplication</key>
				<array>
					<string>Finder</string>
				</array>
				<key>AMParameterProperties</key>
				<dict/>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Move Finder Items to Trash.action</string>
				<key>ActionName</key>
				<string>Move Finder Items to Trash</string>
				<key>ActionParameters</key>
				<dict/>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.MoveToTrash</string>
				<key>CFBundleVersion</key>
				<string>1.1.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<true/>
				<key>CanShowWhenRun</key>
				<false/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
					<string>AMCategoryFilesAndFolders</string>
				</array>
				<key>Class Name</key>
				<string>MoveToTrashAction</string>
				<key>InputUUID</key>
				<string>3D00D7C7-5F2F-4147-BC89-07356C007B00</string>
				<key>Keywords</key>
				<array>
					<string>File</string>
					<string>Folder</string>
					<string>Move</string>
					<string>Trash</string>
					<string>Delete</string>
				</array>
				<key>UUID</key>
				<string>AED9DA6A-8AE3-4AD1-923A-265E2C3D6429</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Finder</string>
				</array>
				<key>arguments</key>
				<dict/>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>207.000000:68.000000</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>CCCE99AE-9595-4B92-A0FB-2E622596B12E</key>
		<dict>
			<key>from</key>
			<string>3EEB0DEB-C1E4-47FA-8313-25BDCACE76D7 - 3EEB0DEB-C1E4-47FA-8313-25BDCACE76D7</string>
			<key>to</key>
			<string>AED9DA6A-8AE3-4AD1-923A-265E2C3D6429 - AED9DA6A-8AE3-4AD1-923A-265E2C3D6429</string>
		</dict>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleID</key>
		<string>com.apple.finder</string>
		<key>applicationBundleIDsByPath</key>
		<dict>
			<key>/System/Library/CoreServices/Finder.app</key>
			<string>com.apple.finder</string>
		</dict>
		<key>applicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>applicationPaths</key>
		<array>
			<string>/System/Library/CoreServices/Finder.app</string>
		</array>
		<key>backgroundColor</key>
		<data>
		YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0b3BYJG9i
		amVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRyb290gAGpCwwXGBki
		KCkwVSRudWxs1Q0ODxAREhMUFRZWJGNsYXNzW05TQ29sb3JOYW1lXE5TQ29s
		b3JTcGFjZV1OU0NhdGFsb2dOYW1lV05TQ29sb3KACIADEAaAAoAEVlN5c3Rl
		bV8QD3N5c3RlbVBpbmtDb2xvctUaGw8cDR0eHyASXE5TQ29tcG9uZW50c1VO
		U1JHQl8QEk5TQ3VzdG9tQ29sb3JTcGFjZUcxIDAgMCAxTxAdMC45ODU5NTQx
		NjU1IDAgMC4wMjY5NDAwMDg2MwAQAYAFgAjTIyQNJSYnVE5TSURVTlNJQ0MQ
		B4AGgAdPEQxIAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJAAYAMQAA
		YWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1I
		UCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAARY3BydAAAAVAAAAAzZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtw
		dAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwAAAAUYlhZWgAAAkAAAAAU
		ZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAAA9QA
		AAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAA
		BDwAAAgMZ1RSQwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmln
		aHQgKGMpIDE5OTggSGV3bGV0dC1QYWNrYXJkIENvbXBhbnkAAGRlc2MAAAAA
		AAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAASc1JHQiBJRUM2MTk2
		Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAA
		AAAAAABYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABja
		WFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAAAAAABZJRUMgaHR0cDovL3d3
		dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVz
		YwAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3Bh
		Y2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJH
		QiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRl
		c2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2
		MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRp
		b24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2
		aWV3AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABM
		CVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAA
		AnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMAKAAt
		ADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoA
		nwCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQET
		ARkBHwElASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakB
		sQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4AkECSwJUAl0CZwJx
		AnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD
		ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+
		BIwEmgSoBLYExATTBOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF
		1QXlBfYGBgYWBicGNwZIBlkGagZ7BowGnQavBsAG0QbjBvUHBwcZBysHPQdP
		B2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiqCL4I0gjnCPsJ
		EAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3Arz
		CwsLIgs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0N
		Jg1ADVoNdA2ODakNww3eDfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96
		D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExExEU8RbRGMEaoRyRHoEgcS
		JhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTw
		FRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cY
		GxhAGGUYihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtj
		G4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5AHmoelB6+Hukf
		Ex8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLd
		IwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3Jugn
		GCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitp
		K50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4w
		NTBsMKQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUT
		NU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6
		dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i
		QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF
		3kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkvi
		TCpMcky6TQJNSk2TTdxOJU5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFS
		fFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1ka
		WWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVg
		V2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeT
		Z+loP2iWaOxpQ2maafFqSGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5v
		eG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQUdHB0zHUodYV14XY+dpt2+HdW
		d7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+wn8jf4R/
		5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhp
		iM6JM4mZif6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+R
		qJIRknqS45NNk7aUIJSKlPSVX5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrV
		m0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFHobaiJqKWowajdqPmpFak
		x6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6h
		rxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5
		SrnCuju6tbsuu6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPU
		xFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1zTXNtc42zrbP
		N8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp2
		2vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m
		lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM
		8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/
		bf//0iorLC1aJGNsYXNzbmFtZVgkY2xhc3Nlc1xOU0NvbG9yU3BhY2WiLi9c
		TlNDb2xvclNwYWNlWE5TT2JqZWN00iorMTJXTlNDb2xvcqIxLwAIABEAGgAk
		ACkAMgA3AEkATABRAFMAXQBjAG4AdQCBAI4AnACkAKYAqACqAKwArgC1AMcA
		0gDfAOUA+gECASIBJAEmASgBLwE0AToBPAE+AUANjA2RDZwNpQ2yDbUNwg3L
		DdAN2AAAAAAAAAIBAAAAAAAAADMAAAAAAAAAAAAAAAAAAA3b
		</data>
		<key>backgroundColorName</key>
		<string>systemPinkColor</string>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject.folder</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>15</integer>
		<key>processesInput</key>
		<false/>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.finder</string>
		<key>serviceApplicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject.folder</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<false/>
		<key>systemImageName</key>
		<string>NSTouchBarQuickLook</string>
		<key>useAutomaticInputType</key>
		<false/>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
